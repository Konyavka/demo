
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
	ПараметрыРегистрации.Вид = "ДополнительныйОтчет";
	ПараметрыРегистрации.Наименование = "Приход денежных средств 1.6.1";
	ПараметрыРегистрации.Версия = "1.01";
	ПараметрыРегистрации.Информация = "";
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
     
    ДобавитьКоманду(ТаблицаКоманд, "Приход денежных средств по видем номенклатуры (таб. 1.6.1)", "1", "ОткрытиеФормы", Истина, "");
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд); 
     
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
     
    Команды = Новый ТаблицаЗначений;
    Команды.Колонки.Добавить("Представление"        , Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Идентификатор"        , Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Использование"        , Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("ПоказыватьОповещение" , Новый ОписаниеТипов("Булево"));
    Команды.Колонки.Добавить("Модификатор"          , Новый ОписаниеТипов("Строка"));
     
    Возврат Команды;
     
КонецФункции
 
Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
     
    НоваяКоманда = ТаблицаКоманд.Добавить();
    НоваяКоманда.Представление        = Представление;
    НоваяКоманда.Идентификатор        = Идентификатор;
    НоваяКоманда.Использование        = Использование;
    НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
    НоваяКоманда.Модификатор          = Модификатор;
     
КонецПроцедуры

///////////////////////////////////////////////////////////////

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	// настройки отчета
	ПериодОтчета = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(Настройки, "ПериодОтчета").Значение;
	
	ДоступноеПодразделение = ПолучитьДоступноеПодразделение();
	
	ПараметрПодразделение = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(Настройки, "Подразделение");
	ПараметрПодразделение.Значение = ДоступноеПодразделение;
	Если ЗначениеЗаполнено(ДоступноеПодразделение) Тогда
		ПараметрПодразделение.Использование = Истина;
	Иначе
		ПараметрПодразделение.Использование = ЛОжь;
	КонецЕсли;	
	
	// тек. оплаты
	СхемаКомпоновкиДанных.НаборыДанных.ТекущийМесяцЦел.Элементы[0].Запрос = 
		ПолучитьТекстЗапросаОплаты("&НачПериода", "&КонПериода", "СуммаТек", "СуммаТекНовый");

	// тек. план
	СхемаКомпоновкиДанных.НаборыДанных.ТекущийМесяцЦел.Элементы[1].Запрос = 
		ПолучитьТекстЗапросаПланы("&НачПериода", "&КонПериода", "СуммаТекПлан");

	// оплаты -1 год
	СхемаКомпоновкиДанных.НаборыДанных.ТекущийМесяцЦел.Элементы[2].Запрос = 
		ПолучитьТекстЗапросаОплаты("&НачПериодаПредГод", "&КонПериодаПредГод", "СуммаПредГод", "СуммаПредГодНовый");
		
	// оплаты -1 мес.
	СхемаКомпоновкиДанных.НаборыДанных.ТекущийМесяцЦел.Элементы[3].Запрос = 
		ПолучитьТекстЗапросаОплаты("&НачПериодаПред", "&КонПериодаПред", "СуммаПред", "СуммаПредНовый");

	// динамика с нач. года
	СхемаКомпоновкиДанных.НаборыДанных.ТекущийМесяцЦел.Элементы[4].Запрос = 
		ПолучитьТекстЗапросаОплаты("&НачТекГода", "&КонПериода", "СуммаТекСНачГода", "СуммаНовыйСНачГода");

	// динамика с нач. прошлого года
	СхемаКомпоновкиДанных.НаборыДанных.ТекущийМесяцЦел.Элементы[5].Запрос = 
		ПолучитьТекстЗапросаОплаты("&НачПредГода", "&КонПериодаПредГод", "СуммаПредСНачГода", "СуммаПредНовыйСНачГода");
		
	// план след месяца
	СхемаКомпоновкиДанных.НаборыДанных.ТекущийМесяцЦел.Элементы[6].Запрос = 
		ПолучитьТекстЗапросаПланы("&НачПериодаСлед", "&КонПериодаСлед", "СуммаСледПлан");
		
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных, , ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);
	
	ОбработатьЗаголовок(ДокументРезультат, ПериодОтчета);
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаОплаты(ИмяПараметраНачПериода, ИмяПараметраКонПериода, ИмяПараметраСумма, ИмяПараметраСуммаНовый)
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
				   |	КлючиАналитикиУчетаПоПартнерам.Партнер КАК Партнер
			 	   |ПОМЕСТИТЬ ВТ_СтарыеКлиенты
				   |ИЗ
				   |	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
			 	   |		ПО (РасчетыСКлиентами.АналитикаУчетаПоПартнерам = КлючиАналитикиУчетаПоПартнерам.Ссылка)
				   |ГДЕ
				   |	РасчетыСКлиентами.Период >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачПериода, ГОД, -3), ГОД)
				   |	И РасчетыСКлиентами.Период < &НачПериода
				   |	И РасчетыСКлиентами.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
				   |	И РасчетыСКлиентами.ОбъектРасчетов.Подразделение В ИЕРАРХИИ(&Подразделение)
				   |;
				   |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РасчетыСКлиентами.ОбъектРасчетов.Объект КАК ЗаказКлиента,				   
	               |	СУММА(РасчетыСКлиентами.Сумма) КАК Сумма
	               |ПОМЕСТИТЬ ВТ_Оплаты
	               |ИЗ
	               |	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ДополнительныеРеквизиты КАК ТаблицаПриемка
	               |		ПО РасчетыСКлиентами.ОбъектРасчетов.Объект = ТаблицаПриемка.Ссылка
	               |			И (ТаблицаПриемка.Свойство.ИдентификаторДляФормул = ""Приёмка"")	               
	               |ГДЕ
	               |	РасчетыСКлиентами.Период МЕЖДУ &НачПериода И &КонПериода
	               |	И РасчетыСКлиентами.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	               |	И РасчетыСКлиентами.ОбъектРасчетов.Подразделение В ИЕРАРХИИ(&Подразделение)
	               |{ГДЕ
	               |	ТаблицаПриемка.Значение = &Приемка}
	               |
	               |СГРУППИРОВАТЬ ПО	               
	               |	РасчетыСКлиентами.ОбъектРасчетов.Объект				   
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаТовары.Ссылка КАК ЗаказКлиента,
				   |    ЕСТЬNULL(ТаблицаВнеСтатистики.Значение, ЛОЖЬ) КАК ВнеСтатистики,
	               |	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	               |	СУММА(ТаблицаТовары.СуммаСНДС) КАК Сумма
	               |ПОМЕСТИТЬ ВТ_Заказы
	               |ИЗ
	               |	Документ.ЗаказКлиента.Товары КАК ТаблицаТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	               |		ПО ТаблицаТовары.Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ДополнительныеРеквизиты КАК ТаблицаВнеСтатистики
	               |		ПО ТаблицаТовары.Ссылка = ТаблицаВнеСтатистики.Ссылка
	               |			И (ТаблицаВнеСтатистики.Свойство.ИдентификаторДляФормул = ""ВнеСтатистики"")
	               |ГДЕ
	               |	ТаблицаТовары.Ссылка В
	               |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |				ВТ_Оплаты.ЗаказКлиента
	               |			ИЗ
	               |				ВТ_Оплаты)
	               |	И ВидыНоменклатуры.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаТовары.Ссылка,  
				   |    ЕСТЬNULL(ТаблицаВнеСтатистики.Значение, ЛОЖЬ),
	               |	ВидыНоменклатуры.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Заказы.ЗаказКлиента КАК ЗаказКлиента,				   
	               |	СУММА(Оплаты.Сумма) КАК СуммаОплата,
	               |	СУММА(Заказы.Сумма) КАК СуммаЗаказ,
	               |	СУММА(Оплаты.Сумма) / СУММА(Заказы.Сумма) КАК КоэффициентОплаты
	               |ПОМЕСТИТЬ ВТ_КоэффициентОплаты
	               |ИЗ
	               |	ВТ_Оплаты КАК Оплаты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВТ_Заказы.ЗаказКлиента КАК ЗаказКлиента,
	               |			СУММА(ВТ_Заказы.Сумма) КАК Сумма
	               |		ИЗ
	               |			ВТ_Заказы КАК ВТ_Заказы
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВТ_Заказы.ЗаказКлиента) КАК Заказы
	               |		ПО (Заказы.ЗаказКлиента = Оплаты.ЗаказКлиента)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Заказы.ЗаказКлиента
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаЗаказы.ЗаказКлиента КАК Документ,				   
	               |	ТаблицаЗаказы.ЗаказКлиента.Менеджер.ФизическоеЛицо КАК Менеджер,
	               |	ТаблицаЗаказы.ВидНоменклатуры КАК ВидНоменклатуры,
				   |	ТаблицаЗаказы.ВнеСтатистики КАК ВнеСтатистики,
	               |	СУММА(ТаблицаЗаказы.Сумма * ЕСТЬNULL(ТаблицаКоэфОплаты.КоэффициентОплаты, 0) / 1000) КАК СуммаТек,
	               |	СУММА(ВЫБОР
	               |			КОГДА ТаблицаСтарыеКлиенты.Партнер ЕСТЬ NULL
	               |				ТОГДА ТаблицаЗаказы.Сумма * ЕСТЬNULL(ТаблицаКоэфОплаты.КоэффициентОплаты, 0) / 1000
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаТекНовый
	               |ИЗ
	               |	ВТ_Заказы КАК ТаблицаЗаказы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоэффициентОплаты КАК ТаблицаКоэфОплаты
	               |		ПО ТаблицаЗаказы.ЗаказКлиента = ТаблицаКоэфОплаты.ЗаказКлиента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтарыеКлиенты КАК ТаблицаСтарыеКлиенты
	               |		ПО ТаблицаЗаказы.ЗаказКлиента.Партнер = ТаблицаСтарыеКлиенты.Партнер
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаЗаказы.ЗаказКлиента,
	               |	ТаблицаЗаказы.ВидНоменклатуры, 
				   |	ТаблицаЗаказы.ВнеСтатистики,
	               |	ТаблицаЗаказы.ЗаказКлиента.Менеджер.ФизическоеЛицо";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НачПериода", 	ИмяПараметраНачПериода);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КонПериода", 	ИмяПараметраКонПериода);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СуммаТек", 		ИмяПараметраСумма);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СуммаТекНовый", 	ИмяПараметраСуммаНовый);
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТекстЗапросаПланы(ИмяПараметраНачПериода, ИмяПараметраКонПериода, ИмяПараметраСумма)
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ТаблицаОборотыПоСтатьям.Ссылка КАК ЭкземплярБюджета,
	               |	ТаблицаОборотыПоСтатьям.ИдентификаторСтроки КАК ИдентификаторСтроки,
	               |	ТаблицаОборотыПоСтатьям.Сумма КАК Сумма
	               |ПОМЕСТИТЬ ВТ_ОборотыПоСтатьям
	               |ИЗ
	               |	Документ.ЭкземплярБюджета.ОборотыПоСтатьямБюджетов КАК ТаблицаОборотыПоСтатьям
	               |ГДЕ
	               |	ТаблицаОборотыПоСтатьям.ПериодПланирования МЕЖДУ &НачПериода И &КонПериода
	               |	И ТаблицаОборотыПоСтатьям.Сумма <> 0
	               |	И ТаблицаОборотыПоСтатьям.Ссылка.Проведен
	               |	И ТаблицаОборотыПоСтатьям.Ссылка.Подразделение В ИЕРАРХИИ(&Подразделение)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаАналитикаСтатейБюджетов.Ссылка КАК Документ,
	               |	ТаблицаАналитикаСтатейБюджетов.Аналитика6 КАК Менеджер,
	               |	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,     
				   |	Ложь КАК ВнеСтатистики,
	               |	СУММА(ЕСТЬNULL(ТаблицаОборотыПоСтатьям.Сумма, 0)) / 1000 КАК СуммаТекПлан
	               |ИЗ
	               |	Документ.ЭкземплярБюджета.АналитикаСтатейБюджетов КАК ТаблицаАналитикаСтатейБюджетов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоСтатьям КАК ТаблицаОборотыПоСтатьям
	               |		ПО ТаблицаАналитикаСтатейБюджетов.Ссылка = ТаблицаОборотыПоСтатьям.ЭкземплярБюджета
	               |			И ТаблицаАналитикаСтатейБюджетов.ИдентификаторСтроки = ТаблицаОборотыПоСтатьям.ИдентификаторСтроки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	               |		ПО ТаблицаАналитикаСтатейБюджетов.Аналитика2 = ВидыНоменклатуры.Ссылка
	               |ГДЕ
	               |	ТаблицаАналитикаСтатейБюджетов.Ссылка В
	               |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |				ВТ_ОборотыПоСтатьям.ЭкземплярБюджета
	               |			ИЗ
	               |				ВТ_ОборотыПоСтатьям)
	               |	И ТаблицаАналитикаСтатейБюджетов.СтатьяБюджетов = &СтатьяБюджетов
	               |	И ВидыНоменклатуры.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	               |{ГДЕ
	               |	ТаблицаАналитикаСтатейБюджетов.Аналитика5 = &Приемка}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаАналитикаСтатейБюджетов.Ссылка,
	               |	ТаблицаАналитикаСтатейБюджетов.Аналитика6,
	               |	ВидыНоменклатуры.Ссылка
	               |
	               |ИМЕЮЩИЕ
	               |	СУММА(ЕСТЬNULL(ТаблицаОборотыПоСтатьям.Сумма, 0)) / 1000 > 0";
	               	               

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НачПериода", 	ИмяПараметраНачПериода);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КонПериода", 	ИмяПараметраКонПериода);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СуммаТекПлан",	ИмяПараметраСумма);
		
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработатьЗаголовок(ТабДок, ПериодОтчета)
	
	ТабДок.ПоказатьУровеньГруппировокКолонок(0);
	
	ТекущийПериод = ПредставлениеПериода(ПериодОтчета.ДатаНачала, ПериодОтчета.ДатаОкончания);
	
	НачПериодаПред = ДобавитьМесяц(ПериодОтчета.ДатаНачала, -1);
	КонПериодаПред = КонецМесяца(НачПериодаПред);
	ПредыдущийПериод = ПредставлениеПериода(НачПериодаПред, КонПериодаПред);
	
	НачПериодаПред = ДобавитьМесяц(ПериодОтчета.ДатаНачала, -12);
	КонПериодаПред = КонецМесяца(НачПериодаПред);
	ПредыдущийПериодГод = ПредставлениеПериода(НачПериодаПред, КонПериодаПред);

	
	Для НомерСтроки = 0 По ТабДок.ФиксацияСверху Цикл
		Для НомерКолонки = ТабДок.ФиксацияСлева + 1 По ТабДок.ШиринаТаблицы Цикл
			Область = ТабДок.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
			Если ПустаяСтрока(Область.Текст) Тогда
				Продолжить;
			КонецЕсли;
			
			Если Область.Текст = "Текущий период" Тогда
				Область.Текст = ТекущийПериод;
			ИначеЕсли Область.Текст = "Предыдущий период" Тогда
				Область.Текст = ПредыдущийПериод;
			ИначеЕсли Область.Текст = "Предыдущий период (- год)" Тогда
				Область.Текст = ПредыдущийПериодГод;
			ИначеЕсли Область.Текст = "Текущее полугодие" Тогда
				НачПериодаПред = НачалоГода(ПериодОтчета.ДатаНачала);
				Область.Текст = ПредставлениеПериода(НачПериодаПред, ПериодОтчета.ДатаОкончания, "ФП = Истина");
			ИначеЕсли Область.Текст = "Прошлое полугодие" Тогда
				НачПериодаПред = НачалоГода(ДобавитьМесяц(ПериодОтчета.ДатаНачала, -12));
				КонПериодаПред = КонецМесяца(ДобавитьМесяц(ПериодОтчета.ДатаОкончания, -12));
				Область.Текст = ПредставлениеПериода(НачПериодаПред, КонПериодаПред, "ФП = Истина");
			ИначеЕсли Область.Текст = "План след. мес." Тогда
				НачПериода = ДобавитьМесяц(ПериодОтчета.ДатаНачала, 1);
				КонПериода = КонецМесяца(ДобавитьМесяц(ПериодОтчета.ДатаОкончания, 1));
				Область.Текст = ПредставлениеПериода(НачПериода, КонПериода);
			ИначеЕсли Область.Текст = "ТемпРостаТек" Тогда								
				Область.Текст = СтрШаблон("%1/%2", ТекущийПериод, ПредыдущийПериод);
			ИначеЕсли Область.Текст = "ТемпРостаПредГод" Тогда                                            				
				Область.Текст = СтрШаблон("%1/%2", ТекущийПериод, ПредыдущийПериодГод);
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
		
КонецПроцедуры

Функция ПолучитьДоступноеПодразделение()

	ТекПользователь = Пользователи.ТекущийПользователь();
	ПодразделениеПользователя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекПользователь, "Подразделение");
	
	Если НЕ ЗначениеЗаполнено(ПодразделениеПользователя) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для текущего пользователя не указано подразделение!");
		
		Возврат Справочники.СтруктураПредприятия.ПустаяСсылка();
	КонецЕсли;
	
	ПодразделениеЭнергия = Справочники.СтруктураПредприятия.НайтиПоКоду("00-000006");
	ПодразделениеИндикатор = Справочники.СтруктураПредприятия.НайтиПоКоду("00-000011");
	ПодразделениеОтделПроизводства = Справочники.СтруктураПредприятия.НайтиПоКоду("00-000004");
	
	Если ПодразделениеПользователя.ПринадлежитЭлементу(ПодразделениеЭнергия) 
		ИЛИ ПодразделениеПользователя = ПодразделениеЭнергия Тогда
		ПодразделениеПользователя = ПодразделениеЭнергия;
	ИначеЕсли ПодразделениеПользователя.ПринадлежитЭлементу(ПодразделениеИндикатор)
		ИЛИ ПодразделениеПользователя = ПодразделениеИндикатор Тогда
		ПодразделениеПользователя = ПодразделениеИндикатор;
	ИначеЕсли ПодразделениеПользователя.ПринадлежитЭлементу(ПодразделениеОтделПроизводства)
		ИЛИ ПодразделениеПользователя = ПодразделениеОтделПроизводства Тогда
		ПодразделениеПользователя = ПодразделениеОтделПроизводства;
	Иначе       
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для текущего пользователя указано подразделение, для которого данный отчет не доступен!");
		Возврат Справочники.СтруктураПредприятия.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ПодразделениеПользователя;
КонецФункции	